# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - vehicle-dismantling-api

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: vehicle-dismantling-api
  PYTHON_VERSION: "3.11"
  # Set this repo variable in GitHub: Settings → Variables → Actions
  AZURE_RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip
          cache-dependency-path: backend-python/requirements.txt

      # Optional "smoke test" of requirements to fail fast on bad pins.
      - name: Validate requirements (optional)
        run: |
          python -m pip install --upgrade pip
          pip install -r backend-python/requirements.txt

      - name: Upload artifact (only backend folder)
        uses: actions/upload-artifact@v4
        with:
          name: backend
          path: |
            backend-python
          if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: backend

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_7663DF00EABC4498862FC7085FB509BF }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_A8E88DB4193742E0B1AD9D23B117B0A4 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_EA5334BB99E541E2A069978BFEB031B2 }}

      # Make the fix "stick": let Kudu/Oryx do a server-side build (pip install) on deploy,
      # and set a stable startup command that points at backend-python/main:app.
      - name: Configure app settings and startup
        uses: azure/CLI@v2
        with:
          inlineScript: |
            az webapp config appsettings set \
              --resource-group "${{ env.AZURE_RESOURCE_GROUP }}" \
              --name "${{ env.AZURE_WEBAPP_NAME }}" \
              --settings SCM_DO_BUILD_DURING_DEPLOYMENT=true

            # Set the Linux startup command (Gunicorn)
            az webapp config set \
              --resource-group "${{ env.AZURE_RESOURCE_GROUP }}" \
              --name "${{ env.AZURE_WEBAPP_NAME }}" \
              --startup-file "gunicorn --chdir backend-python -w 1 -k gthread --threads 4 --timeout 180 --log-level info -b 0.0.0.0:\$PORT main:app"

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: Production
          package: backend-python # deploy folder contents to site root
          clean: true # wipe wwwroot before deploying
